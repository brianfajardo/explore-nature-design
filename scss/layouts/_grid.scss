.row {
  max-width: $grid-width;
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;

    @include responsive(tablet-portrait) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include responsive(tablet-portrait) {
    max-width: 80rem;
    padding: 0 3rem;
  }

  @include clearfix;

  // Attribute selector with ^
  // ^ selects classes that start with the target query ('col-')
  [class^='col-'] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-width;

      @include responsive(tablet-portrait) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }

    @include responsive(tablet-portrait) {
      width: 100% !important;
    }
  }

  // 2 Columns
  .col-1-of-2 {
    // (100% width of viewport - gutter space) / # of columns
    width: calc((100% - #{$gutter-width}) / 2);
  }

  // 3 Columns
  .col-1-of-3 {
    // will be 2 gutters if there are 3 columns!
    width: calc((100% - 2 * #{$gutter-width}) / 3);
  }

  .col-2-of-3 {
    // 1 column * 2 + gutter = 2/3
    width: calc(2 * ((100% - 2 * #{$gutter-width}) / 3) + #{$gutter-width});
  }

  // 4 Columns
  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-width}) / 4);
  }

  .col-2-of-4 {
    width: calc(2 * ((100% - 3 * #{$gutter-width}) / 4) + #{$gutter-width});
  }

  .col-3-of-4 {
    width: calc(3 * ((100% - 3 * #{$gutter-width}) / 4) + 2 * #{$gutter-width});
  }
}
